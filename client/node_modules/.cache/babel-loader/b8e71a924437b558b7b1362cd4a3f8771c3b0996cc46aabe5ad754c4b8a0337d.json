{"ast":null,"code":"var _jsxFileName = \"E:\\\\KaopizTest\\\\fontendweb\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simple validation (in real app, this would be server-side)\n      if (email === 'admin@example.com' && password === 'password') {\n        const userData = {\n          id: 1,\n          email: email,\n          name: 'Admin User',\n          loginTime: new Date().toISOString()\n        };\n        setUser(userData);\n        localStorage.setItem('user', JSON.stringify(userData));\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Invalid email or password'\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Login failed. Please try again.'\n      };\n    }\n  };\n  const register = async (name, email, password, confirmPassword) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simple validation\n      if (password !== confirmPassword) {\n        return {\n          success: false,\n          error: 'Passwords do not match'\n        };\n      }\n      if (password.length < 6) {\n        return {\n          success: false,\n          error: 'Password must be at least 6 characters'\n        };\n      }\n\n      // Simulate successful registration\n      const userData = {\n        id: Date.now(),\n        email: email,\n        name: name,\n        loginTime: new Date().toISOString()\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Registration failed. Please try again.'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","Promise","resolve","setTimeout","userData","id","name","loginTime","Date","toISOString","setItem","stringify","success","error","register","confirmPassword","length","now","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/KaopizTest/fontendweb/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Simple validation (in real app, this would be server-side)\r\n      if (email === 'admin@example.com' && password === 'password') {\r\n        const userData = {\r\n          id: 1,\r\n          email: email,\r\n          name: 'Admin User',\r\n          loginTime: new Date().toISOString()\r\n        };\r\n        \r\n        setUser(userData);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: 'Invalid email or password' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password, confirmPassword) => {\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Simple validation\r\n      if (password !== confirmPassword) {\r\n        return { success: false, error: 'Passwords do not match' };\r\n      }\r\n      \r\n      if (password.length < 6) {\r\n        return { success: false, error: 'Password must be at least 6 characters' };\r\n      }\r\n      \r\n      // Simulate successful registration\r\n      const userData = {\r\n        id: Date.now(),\r\n        email: email,\r\n        name: name,\r\n        loginTime: new Date().toISOString()\r\n      };\r\n      \r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, error: 'Registration failed. Please try again.' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}